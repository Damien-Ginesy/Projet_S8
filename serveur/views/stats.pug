extends layout

block style
    style
        include ../style/stats.css   
        include ../style/charts.min.css
block title
    title Basalt Serveur Supervision

block body

    header 
        a(href="accueil")
            h3 Accueil

    
    h1#title Statistiques Basalt APP

    h1#basalt_left BASALT APP

    div#screen
        canvas#graph1

        div#myNav.overlay
            a.closebtn(href='javascript:void(0)' onclick='closeNav()') &times;
            .overlay-content


                form(action='' method='get')
                    .myForm
                        label(for='nbNoeuds') Nombre de noeuds
                        br
                        input#nbNoeuds(type='number' name='nbNoeuds' min='1' max='100')
                    .myForm
                        label(for='vue') Taille de la vue
                        br
                        input#Vue(type='number' name='vue' min='2' max='6')
                    .myForm
                        label(for='vue') Nombre de noeuds malicieux
                        br
                        input#nbMalicieux(type='number' name='nbMalicieux' min='0' max='100')
                    .myForm
                        br
                        input#submit(type='submit' value='Effectuer les changements')

        span#sub_header(onclick='openNav()')
            h1#open Ouvrir les options  


    span#sub_chart(onclick='openChart()')
        h1#openChart Changer de graphique  

    div#chart

    div#nodes 
        h1#nodeTitle Noeud : 
        div#father
            div#subfather
            canvas#graph2

        
    

    div#cont
        div#but
            button#prev noeud précédent
            button#global Statistiques globales
            button#next  noeud suivant



        
    //- JavaScript Part

    script(src='https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js')

    script.
                
        /*-------------------------------------*/
                    /* params */
        /*-------------------------------------*/

        const pushData1 = [];
        const pushData2 = [];
        const chartId1 = document.querySelector('#graph1'); // first pie chart, global stats window
        const chartId2 = document.querySelector('#graph2'); // pie chart in second window
        let chart;
        let index = 0; // permits to know what is the node's number


        /*-------------------------------------*/
                    /* pie chart */
        /*-------------------------------------*/
        
        async function pieChart(pushData, chartId){

            await getDataForPieCharts();

            let data = {
            labels: ['noeuds bons', 'noeuds malicieux'],
            datasets: [{
                data: pushData[0],
                backgroundColor: ['#6b2d5c', '#E2C290']
            }]
            };
            
            const config = {
                type: 'doughnut',
                data: data,
                options: {
                    maintainAspectRatio : true, // make the pie small
                    labels: {
                        display: true,
                        labels: {
                            fontSize: 500 //change the size of the labels
                        }
                    }
                }
            };

            chart = new Chart(chartId, config);
            console.log(chart.data.datasets);
        }

        pieChart(pushData1, chartId1); // creation of the global pie chart
        pieChart(pushData2, chartId2); // creation of the pie chart for nodes

        
        /*-------------------------------------*/
            /*creation tables stats for nodes*/
        /*-------------------------------------*/

        const nameNode = [];
        let changedTitle = 0;

        async function createTitleNodes(){
            await getData();
            if(changedTitle === 0){
                console.log('ok les gars')
                const father = document.getElementById('nodeTitle');
                let title = document.createElement("p");
                title.setAttribute("id","monTitle");
                title.style.display = 'inline';
                title.append(nameNode[0].allNode[index].nodeID.adresseVirtuelle);
                title.append('/' + "" + "port: ")
                father.append(title)
                let ipAddress = document.createElement("p")
                ipAddress.append(nameNode[0].allNode[index].nodeID.port);
                ipAddress.style.display = 'inline';
                title.append(ipAddress)
            }else{
                console.log('removed')
                document.getElementById("monTitle").remove()
                const father = document.getElementById('nodeTitle');
                let title = document.createElement("p");
                title.style.display = 'inline';
                title.setAttribute("id","monTitle");
                title.append(nameNode[0].allNode[index].nodeID.adresseVirtuelle);
                title.append('/' + "" + "port: ")
                father.append(title);
                let ipAddress = document.createElement("p")
                ipAddress.append(nameNode[0].allNode[index].nodeID.port);
                ipAddress.style.display = 'inline';
                title.append(ipAddress)
            }
            //- changeTitle = 0;
        }

        createTitleNodes();

         /*-------------------------------------*/
            /*params for tables for nodes*/
        /*-------------------------------------*/

        const Data = []; // general data

        let changed = 0;

        async function createTableForNodes(){
            await getDataForPieCharts();

            const father = document.getElementById('subfather')
            let tab = document.createElement("table");
            tab.setAttribute("id","monTab");
            father.append(tab);

            let tr1 = document.createElement('tr');
            tab.append(tr1);

            let td1 = document.createElement('td');
            tr1.append(td1);
            td1.append('Age')

            let tr2 = document.createElement('tr');
            tab.append(tr2);

            let td2 = document.createElement('td');
            tr2.append(td2);
            td2.append('Vue')

            const vueLength = Data[0].allNode[index].vue.length;

            for (let pas = 0; pas < vueLength; pas++) {
                console.log(Data[0])
                let td2 = document.createElement('td');
                tr1.append(td2);
                let seed = Data[0].allNode[index].vue[pas].seed.toString()
                console.log(typeof(seed))
                td2.append(seed.slice(0,2))

                let td3 = document.createElement('td');
                td3.style.fontSize = 10
                tr2.append(td3);
                td3.append(Data[0].allNode[index].vue[pas].nodeID.adresseVirtuelle)

            }
            changed = 1;

        }

        function deleteTableForNodes(){
            if(changed === 1 )
                document.getElementById("monTab").remove()
        }


        



        /*-------------------------------------*/
        /* window display when click on buttons*/
        /*-------------------------------------*/


        const prev = document.getElementById("prev");
        const next = document.getElementById("next");
        const global = document.getElementById("global");

        const screen = document.getElementById("screen");
        const nodes = document.getElementById("nodes");

        const buttonBar = document.getElementById("cont");

        const mainDiv = document.getElementById("chart");


        nodes.style.display = 'none';

        next.addEventListener("click", () => {
        if(getComputedStyle(chartId1).display !== "none"){
            screen.style.display = "none";
            mainDiv.style.display = "none";
            nodes.style.display = 'block';
            buttonBar.style.margin = "105px";


            deleteTableForNodes();

            changedTitle = 1; // const to know if function was applied
            createTitleNodes();

            createTableForNodes();
        }
            index = index+1;
        })

        prev.addEventListener("click", () => {
            if(getComputedStyle(chartId1).display !== "none"){
            screen.style.display = "none";
            mainDiv.style.display = "none";
            nodes.style.display = 'block';
            buttonBar.style.marginTop = "105px";

            changedTitle = 1; // const to know if function was applied
            createTitleNodes();

            deleteTableForNodes();
            createTableForNodes();

            } 
            index = index-1;
        })
        

        global.addEventListener("click", () => {
            if(getComputedStyle(chartId1).display !== "none"){
                screen.style.display = "block";
                nodes.style.display = 'none';
                mainDiv.style.display = "none";
                buttonBar.style.marginTop = "0px";
            }else{
                screen.style.display = "block";
                mainDiv.style.display = "none";
                buttonBar.style.marginTop = "0px";
            }
        })



        /*-------------------------------------*/
                    /* header nav */
        /*-------------------------------------*/

        
        function openNav() {
        document.getElementById("myNav").style.width = "100%";
        }
        
        
        function closeNav() {
        document.getElementById("myNav").style.width = "0%";
        }


        /*-------------------------------------*/
                    /* line chart */
        /*-------------------------------------*/

        mainDiv.style.display = "none";

        let tab = document.createElement("table");
        tab.className = 'charts-css line show-4-secondary-axes show-heading';
        tab.id = "my-chart";
        mainDiv.append(tab);  
        let tbody = document.createElement('tbody');
        tab.append(tbody);

        let caption = document.createElement('caption');
        caption.textContent = "Graphique Basalt"
        tab.append(caption)


        let tr1 = document.createElement('tr');
        tbody.append(tr1);
        let td1 = document.createElement('td');
        td1.style =  "--start: 0.0; --size: 0.4";
        tr1.append(td1);
        let span = document.createElement('span');
        span.className = "data"
        td1.append(span);


        let tr2 = document.createElement('tr');
        tbody.append(tr2);
        let td2 = document.createElement('td');
        td2.style = "--start: 0.4; --size: 0.4" ;
        tr2.append(td2);
        let span2 = document.createElement('span');
        span2.className = "data"
        td2.append(span2);



        function openChart(){
        screen.style.display = "none";
        nodes.style.display = "none";
        mainDiv.style.display = "block";
        }


        /*-------------------------------------*/
                    /* get data */
        /*-------------------------------------*/

        async function getData(){
            const query = await fetch('/nodeData');
            const data = await query.json();
            nameNode.push(data);
            Data.push(data)
        };
        

        async function getDataForPieCharts(){
            const query = await fetch('/statsData');
            const data = await query.json();
            const dataToPush = [data.nbMalicieux,data.nbSains];
            pushData1.push(dataToPush);
            pushData2.push(dataToPush);
        };

        async function updateData() {
            await getDataForPieCharts();
            console.log(pushData1);
            chart.data.datasets[0].data.data = pushData1[-1];
            console.log(chart.data.datasets[0]);
            chart.update();
        }

        setInterval(updateData,5000);
        
 
    